syntax = "proto3";

package fabchain.fab;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "fabchain/fab/params.proto";
import "fabchain/fab/user.proto";
import "fabchain/fab/filestore.proto";
import "fabchain/fab/agency.proto";
import "fabchain/fab/product.proto";
import "fabchain/fab/storefront.proto";
import "fabchain/fab/request.proto";
import "fabchain/fab/pricer.proto";
import "fabchain/fab/manufacture.proto";
import "fabchain/fab/capability.proto";
import "fabchain/fab/response.proto";
import "fabchain/fab/order.proto";

option go_package = "fabchain/x/fab/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/fabchain/fab/params";
  
  }
  
  // Queries a list of User items.
  rpc User    (QueryGetUserRequest) returns (QueryGetUserResponse) {
    option (google.api.http).get = "/fabchain/fab/user/{id}";
  
  }
  rpc UserAll (QueryAllUserRequest) returns (QueryAllUserResponse) {
    option (google.api.http).get = "/fabchain/fab/user";
  
  }
  
  // Queries a list of Filestore items.
  rpc Filestore    (QueryGetFilestoreRequest) returns (QueryGetFilestoreResponse) {
    option (google.api.http).get = "/fabchain/fab/filestore/{id}";
  
  }
  rpc FilestoreAll (QueryAllFilestoreRequest) returns (QueryAllFilestoreResponse) {
    option (google.api.http).get = "/fabchain/fab/filestore";
  
  }
  
  // Queries a list of Agency items.
  rpc Agency    (QueryGetAgencyRequest) returns (QueryGetAgencyResponse) {
    option (google.api.http).get = "/fabchain/fab/agency/{id}";
  
  }
  rpc AgencyAll (QueryAllAgencyRequest) returns (QueryAllAgencyResponse) {
    option (google.api.http).get = "/fabchain/fab/agency";
  
  }
  
  // Queries a list of Product items.
  rpc Product    (QueryGetProductRequest) returns (QueryGetProductResponse) {
    option (google.api.http).get = "/fabchain/fab/product/{id}";
  
  }
  rpc ProductAll (QueryAllProductRequest) returns (QueryAllProductResponse) {
    option (google.api.http).get = "/fabchain/fab/product";
  
  }
  
  // Queries a list of Storefront items.
  rpc Storefront    (QueryGetStorefrontRequest) returns (QueryGetStorefrontResponse) {
    option (google.api.http).get = "/fabchain/fab/storefront/{id}";
  
  }
  rpc StorefrontAll (QueryAllStorefrontRequest) returns (QueryAllStorefrontResponse) {
    option (google.api.http).get = "/fabchain/fab/storefront";
  
  }
  
  // Queries a list of Request items.
  rpc Request    (QueryGetRequestRequest) returns (QueryGetRequestResponse) {
    option (google.api.http).get = "/fabchain/fab/request/{id}";
  
  }
  rpc RequestAll (QueryAllRequestRequest) returns (QueryAllRequestResponse) {
    option (google.api.http).get = "/fabchain/fab/request";
  
  }
  
  // Queries a list of Pricer items.
  rpc Pricer    (QueryGetPricerRequest) returns (QueryGetPricerResponse) {
    option (google.api.http).get = "/fabchain/fab/pricer/{id}";
  
  }
  rpc PricerAll (QueryAllPricerRequest) returns (QueryAllPricerResponse) {
    option (google.api.http).get = "/fabchain/fab/pricer";
  
  }
  
  // Queries a list of Manufacture items.
  rpc Manufacture    (QueryGetManufactureRequest) returns (QueryGetManufactureResponse) {
    option (google.api.http).get = "/fabchain/fab/manufacture/{id}";
  
  }
  rpc ManufactureAll (QueryAllManufactureRequest) returns (QueryAllManufactureResponse) {
    option (google.api.http).get = "/fabchain/fab/manufacture";
  
  }
  
  // Queries a list of Capability items.
  rpc Capability    (QueryGetCapabilityRequest) returns (QueryGetCapabilityResponse) {
    option (google.api.http).get = "/fabchain/fab/capability/{id}";
  
  }
  rpc CapabilityAll (QueryAllCapabilityRequest) returns (QueryAllCapabilityResponse) {
    option (google.api.http).get = "/fabchain/fab/capability";
  
  }
  
  // Queries a list of Response items.
  rpc Response    (QueryGetResponseRequest) returns (QueryGetResponseResponse) {
    option (google.api.http).get = "/fabchain/fab/response/{id}";
  
  }
  rpc ResponseAll (QueryAllResponseRequest) returns (QueryAllResponseResponse) {
    option (google.api.http).get = "/fabchain/fab/response";
  
  }
  
  // Queries a list of Order items.
  rpc Order    (QueryGetOrderRequest) returns (QueryGetOrderResponse) {
    option (google.api.http).get = "/fabchain/fab/order/{id}";
  
  }
  rpc OrderAll (QueryAllOrderRequest) returns (QueryAllOrderResponse) {
    option (google.api.http).get = "/fabchain/fab/order";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetUserRequest {
  uint64 id = 1;
}

message QueryGetUserResponse {
  User User = 1 [(gogoproto.nullable) = false];
}

message QueryAllUserRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllUserResponse {
  repeated User                                   User       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetFilestoreRequest {
  uint64 id = 1;
}

message QueryGetFilestoreResponse {
  Filestore Filestore = 1 [(gogoproto.nullable) = false];
}

message QueryAllFilestoreRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllFilestoreResponse {
  repeated Filestore                              Filestore  = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetAgencyRequest {
  uint64 id = 1;
}

message QueryGetAgencyResponse {
  Agency Agency = 1 [(gogoproto.nullable) = false];
}

message QueryAllAgencyRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAgencyResponse {
  repeated Agency                                 Agency     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetProductRequest {
  uint64 id = 1;
}

message QueryGetProductResponse {
  Product Product = 1 [(gogoproto.nullable) = false];
}

message QueryAllProductRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllProductResponse {
  repeated Product                                Product    = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetStorefrontRequest {
  uint64 id = 1;
}

message QueryGetStorefrontResponse {
  Storefront Storefront = 1 [(gogoproto.nullable) = false];
}

message QueryAllStorefrontRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllStorefrontResponse {
  repeated Storefront                             Storefront = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetRequestRequest {
  uint64 id = 1;
}

message QueryGetRequestResponse {
  Request Request = 1 [(gogoproto.nullable) = false];
}

message QueryAllRequestRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRequestResponse {
  repeated Request                                Request    = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetPricerRequest {
  uint64 id = 1;
}

message QueryGetPricerResponse {
  Pricer Pricer = 1 [(gogoproto.nullable) = false];
}

message QueryAllPricerRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPricerResponse {
  repeated Pricer                                 Pricer     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetManufactureRequest {
  uint64 id = 1;
}

message QueryGetManufactureResponse {
  Manufacture Manufacture = 1 [(gogoproto.nullable) = false];
}

message QueryAllManufactureRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllManufactureResponse {
  repeated Manufacture                            Manufacture = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination  = 2;
}

message QueryGetCapabilityRequest {
  uint64 id = 1;
}

message QueryGetCapabilityResponse {
  Capability Capability = 1 [(gogoproto.nullable) = false];
}

message QueryAllCapabilityRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCapabilityResponse {
  repeated Capability                             Capability = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetResponseRequest {
  uint64 id = 1;
}

message QueryGetResponseResponse {
  Response Response = 1 [(gogoproto.nullable) = false];
}

message QueryAllResponseRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllResponseResponse {
  repeated Response                               Response   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetOrderRequest {
  uint64 id = 1;
}

message QueryGetOrderResponse {
  Order Order = 1 [(gogoproto.nullable) = false];
}

message QueryAllOrderRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllOrderResponse {
  repeated Order                                  Order      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

