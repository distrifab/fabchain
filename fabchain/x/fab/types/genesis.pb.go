// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: fabchain/fab/genesis.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GenesisState defines the fab module's genesis state.
type GenesisState struct {
	Params           Params        `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
	UserList         []User        `protobuf:"bytes,2,rep,name=userList,proto3" json:"userList"`
	UserCount        uint64        `protobuf:"varint,3,opt,name=userCount,proto3" json:"userCount,omitempty"`
	FilestoreList    []Filestore   `protobuf:"bytes,4,rep,name=filestoreList,proto3" json:"filestoreList"`
	FilestoreCount   uint64        `protobuf:"varint,5,opt,name=filestoreCount,proto3" json:"filestoreCount,omitempty"`
	AgencyList       []Agency      `protobuf:"bytes,6,rep,name=agencyList,proto3" json:"agencyList"`
	AgencyCount      uint64        `protobuf:"varint,7,opt,name=agencyCount,proto3" json:"agencyCount,omitempty"`
	ProductList      []Product     `protobuf:"bytes,8,rep,name=productList,proto3" json:"productList"`
	ProductCount     uint64        `protobuf:"varint,9,opt,name=productCount,proto3" json:"productCount,omitempty"`
	StorefrontList   []Storefront  `protobuf:"bytes,10,rep,name=storefrontList,proto3" json:"storefrontList"`
	StorefrontCount  uint64        `protobuf:"varint,11,opt,name=storefrontCount,proto3" json:"storefrontCount,omitempty"`
	RequestList      []Request     `protobuf:"bytes,12,rep,name=requestList,proto3" json:"requestList"`
	RequestCount     uint64        `protobuf:"varint,13,opt,name=requestCount,proto3" json:"requestCount,omitempty"`
	PricerList       []Pricer      `protobuf:"bytes,14,rep,name=pricerList,proto3" json:"pricerList"`
	PricerCount      uint64        `protobuf:"varint,15,opt,name=pricerCount,proto3" json:"pricerCount,omitempty"`
	ManufactureList  []Manufacture `protobuf:"bytes,16,rep,name=manufactureList,proto3" json:"manufactureList"`
	ManufactureCount uint64        `protobuf:"varint,17,opt,name=manufactureCount,proto3" json:"manufactureCount,omitempty"`
	CapabilityList   []Capability  `protobuf:"bytes,18,rep,name=capabilityList,proto3" json:"capabilityList"`
	CapabilityCount  uint64        `protobuf:"varint,19,opt,name=capabilityCount,proto3" json:"capabilityCount,omitempty"`
	ResponseList     []Response    `protobuf:"bytes,20,rep,name=responseList,proto3" json:"responseList"`
	ResponseCount    uint64        `protobuf:"varint,21,opt,name=responseCount,proto3" json:"responseCount,omitempty"`
	OrderList        []Order       `protobuf:"bytes,22,rep,name=orderList,proto3" json:"orderList"`
	OrderCount       uint64        `protobuf:"varint,23,opt,name=orderCount,proto3" json:"orderCount,omitempty"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_2763ba173930d362, []int{0}
}
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

func (m *GenesisState) GetUserList() []User {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *GenesisState) GetUserCount() uint64 {
	if m != nil {
		return m.UserCount
	}
	return 0
}

func (m *GenesisState) GetFilestoreList() []Filestore {
	if m != nil {
		return m.FilestoreList
	}
	return nil
}

func (m *GenesisState) GetFilestoreCount() uint64 {
	if m != nil {
		return m.FilestoreCount
	}
	return 0
}

func (m *GenesisState) GetAgencyList() []Agency {
	if m != nil {
		return m.AgencyList
	}
	return nil
}

func (m *GenesisState) GetAgencyCount() uint64 {
	if m != nil {
		return m.AgencyCount
	}
	return 0
}

func (m *GenesisState) GetProductList() []Product {
	if m != nil {
		return m.ProductList
	}
	return nil
}

func (m *GenesisState) GetProductCount() uint64 {
	if m != nil {
		return m.ProductCount
	}
	return 0
}

func (m *GenesisState) GetStorefrontList() []Storefront {
	if m != nil {
		return m.StorefrontList
	}
	return nil
}

func (m *GenesisState) GetStorefrontCount() uint64 {
	if m != nil {
		return m.StorefrontCount
	}
	return 0
}

func (m *GenesisState) GetRequestList() []Request {
	if m != nil {
		return m.RequestList
	}
	return nil
}

func (m *GenesisState) GetRequestCount() uint64 {
	if m != nil {
		return m.RequestCount
	}
	return 0
}

func (m *GenesisState) GetPricerList() []Pricer {
	if m != nil {
		return m.PricerList
	}
	return nil
}

func (m *GenesisState) GetPricerCount() uint64 {
	if m != nil {
		return m.PricerCount
	}
	return 0
}

func (m *GenesisState) GetManufactureList() []Manufacture {
	if m != nil {
		return m.ManufactureList
	}
	return nil
}

func (m *GenesisState) GetManufactureCount() uint64 {
	if m != nil {
		return m.ManufactureCount
	}
	return 0
}

func (m *GenesisState) GetCapabilityList() []Capability {
	if m != nil {
		return m.CapabilityList
	}
	return nil
}

func (m *GenesisState) GetCapabilityCount() uint64 {
	if m != nil {
		return m.CapabilityCount
	}
	return 0
}

func (m *GenesisState) GetResponseList() []Response {
	if m != nil {
		return m.ResponseList
	}
	return nil
}

func (m *GenesisState) GetResponseCount() uint64 {
	if m != nil {
		return m.ResponseCount
	}
	return 0
}

func (m *GenesisState) GetOrderList() []Order {
	if m != nil {
		return m.OrderList
	}
	return nil
}

func (m *GenesisState) GetOrderCount() uint64 {
	if m != nil {
		return m.OrderCount
	}
	return 0
}

func init() {
	proto.RegisterType((*GenesisState)(nil), "fabchain.fab.GenesisState")
}

func init() { proto.RegisterFile("fabchain/fab/genesis.proto", fileDescriptor_2763ba173930d362) }

var fileDescriptor_2763ba173930d362 = []byte{
	// 620 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x63, 0x1a, 0x42, 0x33, 0xf9, 0x57, 0xb6, 0x69, 0x93, 0x86, 0x62, 0xa2, 0x0a, 0xa1,
	0x88, 0x43, 0x22, 0x05, 0x24, 0x24, 0x24, 0x24, 0x68, 0xa4, 0x22, 0x24, 0x10, 0x55, 0x2a, 0x2e,
	0xdc, 0x36, 0xee, 0x3a, 0x58, 0x6a, 0x6d, 0x63, 0xaf, 0x25, 0xfa, 0x16, 0xbc, 0x02, 0x6f, 0xd3,
	0x63, 0x8f, 0x9c, 0x10, 0x4a, 0x5e, 0x04, 0xed, 0xcc, 0xfa, 0xcf, 0x1a, 0xdf, 0xbc, 0xdf, 0x7c,
	0x33, 0x3f, 0xef, 0x7e, 0xf6, 0xc2, 0xc8, 0xe5, 0x2b, 0xe7, 0x1b, 0xf7, 0xfc, 0x99, 0xcb, 0x57,
	0xb3, 0xb5, 0xf0, 0x45, 0xec, 0xc5, 0xd3, 0x30, 0x0a, 0x64, 0xc0, 0xda, 0x69, 0x6d, 0xea, 0xf2,
	0xd5, 0xa8, 0xbf, 0x0e, 0xd6, 0x01, 0x16, 0x66, 0xea, 0x89, 0x3c, 0xa3, 0x23, 0xa3, 0x3f, 0xe4,
	0x11, 0xbf, 0xd6, 0xed, 0xa3, 0x81, 0x51, 0x4a, 0x62, 0x11, 0xe9, 0xc2, 0xb1, 0x51, 0x70, 0xbd,
	0x2b, 0x11, 0xcb, 0x20, 0x12, 0x95, 0x13, 0xf9, 0x5a, 0xf8, 0xce, 0x8d, 0x2e, 0x99, 0x2f, 0x1b,
	0x46, 0xc1, 0x65, 0xe2, 0x48, 0x5d, 0x7b, 0x6c, 0xd4, 0x70, 0xa0, 0x1b, 0x05, 0xbe, 0xac, 0x6c,
	0x8d, 0xc4, 0xf7, 0x44, 0xc4, 0xb2, 0x7a, 0x0f, 0x91, 0xe7, 0x64, 0xaf, 0x6a, 0x1b, 0xa5, 0x6b,
	0xee, 0x27, 0x2e, 0x77, 0x64, 0x92, 0xbd, 0xac, 0x49, 0x75, 0x78, 0xc8, 0x57, 0xde, 0x95, 0x27,
	0xd3, 0x17, 0x7e, 0x54, 0xa2, 0xc6, 0x61, 0xe0, 0xc7, 0x69, 0xef, 0xd0, 0x28, 0x06, 0xd1, 0x65,
	0x4a, 0x3d, 0xf9, 0xd5, 0x84, 0xf6, 0x7b, 0x8a, 0xe2, 0x42, 0x72, 0x29, 0xd8, 0x1c, 0x1a, 0x74,
	0xb4, 0x43, 0x6b, 0x6c, 0x4d, 0x5a, 0xf3, 0xfe, 0xb4, 0x18, 0xcd, 0xf4, 0x1c, 0x6b, 0xa7, 0xf5,
	0xdb, 0x3f, 0x4f, 0x6a, 0x4b, 0xed, 0x64, 0x2f, 0x61, 0x57, 0x9d, 0xf9, 0x47, 0x2f, 0x96, 0xc3,
	0x7b, 0xe3, 0x9d, 0x49, 0x6b, 0xce, 0xcc, 0xae, 0x2f, 0xb1, 0x88, 0x74, 0x4f, 0xe6, 0x64, 0xc7,
	0xd0, 0x54, 0xcf, 0x8b, 0x20, 0xf1, 0xe5, 0x70, 0x67, 0x6c, 0x4d, 0xea, 0xcb, 0x5c, 0x60, 0x0b,
	0xe8, 0x64, 0x71, 0xe1, 0xe0, 0x3a, 0x0e, 0x1e, 0x98, 0x83, 0xcf, 0x52, 0x8b, 0x9e, 0x6e, 0xf6,
	0xb0, 0x67, 0xd0, 0xcd, 0x04, 0xe2, 0xdc, 0x47, 0x4e, 0x49, 0x65, 0xaf, 0x01, 0x28, 0x7d, 0x24,
	0x35, 0x90, 0x54, 0xda, 0xf8, 0x3b, 0xac, 0x6b, 0x4c, 0xc1, 0xcd, 0xc6, 0xd0, 0xa2, 0x15, 0x01,
	0x1e, 0x20, 0xa0, 0x28, 0xb1, 0x37, 0xd0, 0xd2, 0x1f, 0x10, 0x8e, 0xdf, 0xc5, 0xf1, 0x07, 0xa5,
	0x73, 0x25, 0x83, 0x9e, 0x5f, 0xf4, 0xb3, 0x13, 0x68, 0xeb, 0x25, 0x11, 0x9a, 0x48, 0x30, 0x34,
	0x76, 0x06, 0xdd, 0xfc, 0x3b, 0x44, 0x0a, 0x20, 0x65, 0x68, 0x52, 0x2e, 0x32, 0x8f, 0x06, 0x95,
	0xba, 0xd8, 0x04, 0x7a, 0xb9, 0x42, 0xb8, 0x16, 0xe2, 0xca, 0xb2, 0xda, 0x94, 0xfe, 0xb4, 0x11,
	0xd7, 0xae, 0xda, 0xd4, 0x92, 0x0c, 0xe9, 0xa6, 0x0a, 0x7e, 0xb5, 0x29, 0xbd, 0x24, 0x4a, 0x87,
	0x36, 0x55, 0xd4, 0x54, 0x2a, 0xf4, 0x87, 0x20, 0xa1, 0x5b, 0x95, 0xca, 0x39, 0xd6, 0xd3, 0x54,
	0x72, 0xb7, 0x4a, 0x85, 0x56, 0x34, 0xbe, 0x47, 0xa9, 0x14, 0x24, 0xf6, 0x01, 0x7a, 0x85, 0x9f,
	0x0c, 0x11, 0x7b, 0x88, 0x38, 0x32, 0x11, 0x9f, 0x72, 0x93, 0xe6, 0x94, 0xfb, 0xd8, 0x73, 0xd8,
	0x2b, 0x48, 0x44, 0x7c, 0x88, 0xc4, 0xff, 0x74, 0x95, 0x54, 0xfe, 0xef, 0x22, 0x95, 0x55, 0x25,
	0xb5, 0xc8, 0x3c, 0x69, 0x52, 0x66, 0x97, 0x4a, 0x2a, 0x57, 0x08, 0xb9, 0x4f, 0x49, 0x95, 0x64,
	0xf6, 0x56, 0x1d, 0x35, 0x5d, 0x07, 0xc8, 0xeb, 0x23, 0xef, 0xb0, 0x1c, 0x15, 0x39, 0x34, 0xcd,
	0xe8, 0x60, 0x4f, 0xa1, 0x93, 0xae, 0x89, 0x74, 0x80, 0x24, 0x53, 0x64, 0xaf, 0xa0, 0x89, 0x37,
	0x0b, 0x42, 0x0e, 0x11, 0xb2, 0x6f, 0x42, 0x3e, 0xab, 0xb2, 0x26, 0xe4, 0x5e, 0x66, 0x03, 0xe0,
	0x82, 0x66, 0x0f, 0x70, 0x76, 0x41, 0x39, 0x9d, 0xde, 0x6e, 0x6c, 0xeb, 0x6e, 0x63, 0x5b, 0x7f,
	0x37, 0xb6, 0xf5, 0x73, 0x6b, 0xd7, 0xee, 0xb6, 0x76, 0xed, 0xf7, 0xd6, 0xae, 0x7d, 0xed, 0x67,
	0xf7, 0xda, 0x0f, 0xbc, 0xd9, 0xe4, 0x4d, 0x28, 0xe2, 0x55, 0x03, 0xaf, 0xb6, 0x17, 0xff, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x2c, 0x3c, 0x47, 0xc5, 0x71, 0x06, 0x00, 0x00,
}

func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.OrderCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.OrderCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb8
	}
	if len(m.OrderList) > 0 {
		for iNdEx := len(m.OrderList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OrderList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xb2
		}
	}
	if m.ResponseCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.ResponseCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa8
	}
	if len(m.ResponseList) > 0 {
		for iNdEx := len(m.ResponseList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ResponseList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa2
		}
	}
	if m.CapabilityCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.CapabilityCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if len(m.CapabilityList) > 0 {
		for iNdEx := len(m.CapabilityList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.CapabilityList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x92
		}
	}
	if m.ManufactureCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.ManufactureCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if len(m.ManufactureList) > 0 {
		for iNdEx := len(m.ManufactureList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ManufactureList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
	}
	if m.PricerCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.PricerCount))
		i--
		dAtA[i] = 0x78
	}
	if len(m.PricerList) > 0 {
		for iNdEx := len(m.PricerList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PricerList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x72
		}
	}
	if m.RequestCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.RequestCount))
		i--
		dAtA[i] = 0x68
	}
	if len(m.RequestList) > 0 {
		for iNdEx := len(m.RequestList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RequestList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x62
		}
	}
	if m.StorefrontCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.StorefrontCount))
		i--
		dAtA[i] = 0x58
	}
	if len(m.StorefrontList) > 0 {
		for iNdEx := len(m.StorefrontList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.StorefrontList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x52
		}
	}
	if m.ProductCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.ProductCount))
		i--
		dAtA[i] = 0x48
	}
	if len(m.ProductList) > 0 {
		for iNdEx := len(m.ProductList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ProductList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if m.AgencyCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.AgencyCount))
		i--
		dAtA[i] = 0x38
	}
	if len(m.AgencyList) > 0 {
		for iNdEx := len(m.AgencyList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AgencyList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if m.FilestoreCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.FilestoreCount))
		i--
		dAtA[i] = 0x28
	}
	if len(m.FilestoreList) > 0 {
		for iNdEx := len(m.FilestoreList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FilestoreList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.UserCount != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.UserCount))
		i--
		dAtA[i] = 0x18
	}
	if len(m.UserList) > 0 {
		for iNdEx := len(m.UserList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UserList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovGenesis(uint64(l))
	if len(m.UserList) > 0 {
		for _, e := range m.UserList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.UserCount != 0 {
		n += 1 + sovGenesis(uint64(m.UserCount))
	}
	if len(m.FilestoreList) > 0 {
		for _, e := range m.FilestoreList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.FilestoreCount != 0 {
		n += 1 + sovGenesis(uint64(m.FilestoreCount))
	}
	if len(m.AgencyList) > 0 {
		for _, e := range m.AgencyList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.AgencyCount != 0 {
		n += 1 + sovGenesis(uint64(m.AgencyCount))
	}
	if len(m.ProductList) > 0 {
		for _, e := range m.ProductList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.ProductCount != 0 {
		n += 1 + sovGenesis(uint64(m.ProductCount))
	}
	if len(m.StorefrontList) > 0 {
		for _, e := range m.StorefrontList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.StorefrontCount != 0 {
		n += 1 + sovGenesis(uint64(m.StorefrontCount))
	}
	if len(m.RequestList) > 0 {
		for _, e := range m.RequestList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.RequestCount != 0 {
		n += 1 + sovGenesis(uint64(m.RequestCount))
	}
	if len(m.PricerList) > 0 {
		for _, e := range m.PricerList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.PricerCount != 0 {
		n += 1 + sovGenesis(uint64(m.PricerCount))
	}
	if len(m.ManufactureList) > 0 {
		for _, e := range m.ManufactureList {
			l = e.Size()
			n += 2 + l + sovGenesis(uint64(l))
		}
	}
	if m.ManufactureCount != 0 {
		n += 2 + sovGenesis(uint64(m.ManufactureCount))
	}
	if len(m.CapabilityList) > 0 {
		for _, e := range m.CapabilityList {
			l = e.Size()
			n += 2 + l + sovGenesis(uint64(l))
		}
	}
	if m.CapabilityCount != 0 {
		n += 2 + sovGenesis(uint64(m.CapabilityCount))
	}
	if len(m.ResponseList) > 0 {
		for _, e := range m.ResponseList {
			l = e.Size()
			n += 2 + l + sovGenesis(uint64(l))
		}
	}
	if m.ResponseCount != 0 {
		n += 2 + sovGenesis(uint64(m.ResponseCount))
	}
	if len(m.OrderList) > 0 {
		for _, e := range m.OrderList {
			l = e.Size()
			n += 2 + l + sovGenesis(uint64(l))
		}
	}
	if m.OrderCount != 0 {
		n += 2 + sovGenesis(uint64(m.OrderCount))
	}
	return n
}

func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserList = append(m.UserList, User{})
			if err := m.UserList[len(m.UserList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserCount", wireType)
			}
			m.UserCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilestoreList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FilestoreList = append(m.FilestoreList, Filestore{})
			if err := m.FilestoreList[len(m.FilestoreList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilestoreCount", wireType)
			}
			m.FilestoreCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FilestoreCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgencyList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgencyList = append(m.AgencyList, Agency{})
			if err := m.AgencyList[len(m.AgencyList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgencyCount", wireType)
			}
			m.AgencyCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AgencyCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProductList = append(m.ProductList, Product{})
			if err := m.ProductList[len(m.ProductList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductCount", wireType)
			}
			m.ProductCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProductCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorefrontList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StorefrontList = append(m.StorefrontList, Storefront{})
			if err := m.StorefrontList[len(m.StorefrontList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorefrontCount", wireType)
			}
			m.StorefrontCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StorefrontCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestList = append(m.RequestList, Request{})
			if err := m.RequestList[len(m.RequestList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestCount", wireType)
			}
			m.RequestCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequestCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PricerList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PricerList = append(m.PricerList, Pricer{})
			if err := m.PricerList[len(m.PricerList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PricerCount", wireType)
			}
			m.PricerCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PricerCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManufactureList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ManufactureList = append(m.ManufactureList, Manufacture{})
			if err := m.ManufactureList[len(m.ManufactureList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManufactureCount", wireType)
			}
			m.ManufactureCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ManufactureCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CapabilityList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CapabilityList = append(m.CapabilityList, Capability{})
			if err := m.CapabilityList[len(m.CapabilityList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CapabilityCount", wireType)
			}
			m.CapabilityCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CapabilityCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResponseList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResponseList = append(m.ResponseList, Response{})
			if err := m.ResponseList[len(m.ResponseList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResponseCount", wireType)
			}
			m.ResponseCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResponseCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderList = append(m.OrderList, Order{})
			if err := m.OrderList[len(m.OrderList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderCount", wireType)
			}
			m.OrderCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrderCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenesis        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenesis          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenesis = fmt.Errorf("proto: unexpected end of group")
)
